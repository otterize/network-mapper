// Code generated by MockGen. DO NOT EDIT.
// Source: network-mapper/src/mapper/pkg/otelexporter/edge_metric.go

// Package mock_otelexporter is a generated GoMock package.
package metricexporter

import (
	context "context"
	reflect "reflect"

	"go.uber.org/mock/gomock"
)

// MockEdgeMetric is a mock of EdgeMetric interface.
type MockEdgeMetric struct {
	ctrl     *gomock.Controller
	recorder *MockEdgeMetricMockRecorder
}

// MockEdgeMetricMockRecorder is the mock recorder for MockEdgeMetric.
type MockEdgeMetricMockRecorder struct {
	mock *MockEdgeMetric
}

// NewMockEdgeMetric creates a new mock instance.
func NewMockEdgeMetric(ctrl *gomock.Controller) *MockEdgeMetric {
	mock := &MockEdgeMetric{ctrl: ctrl}
	mock.recorder = &MockEdgeMetricMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEdgeMetric) EXPECT() *MockEdgeMetricMockRecorder {
	return m.recorder
}

// Record mocks base method.
func (m *MockEdgeMetric) Record(ctx context.Context, from, to string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Record", ctx, from, to)
}

// Record indicates an expected call of Record.
func (mr *MockEdgeMetricMockRecorder) Record(ctx, from, to interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Record", reflect.TypeOf((*MockEdgeMetric)(nil).Record), ctx, from, to)
}